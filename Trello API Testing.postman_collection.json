{
	"info": {
		"_postman_id": "9335ea8c-7e5c-4389-9283-a2778019343a",
		"name": "Trello API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2559291"
	},
	"item": [
		{
			"name": "Trello Lists",
			"item": [
				{
					"name": "Get  a list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test('Check response data', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id of the lists', function () {\r",
									"    const jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).is.eql('67da86c99909eb093566004f')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('Check the id of the list ', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the name of the list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).to.eql('ram')\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"pm.test('Check the closed property', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('closed');\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('Check the color of the list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.color).to.eql('orange')\r",
									"    \r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('Check the id of the board', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.idBoard).to.eql('67da70da7765598055d7523b')\r",
									"\r",
									"\r",
									"\r",
									"});\r",
									"pm.test('check the datatype of the datasource', function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.datasource).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test('check the filter of the datasource', function () {\r",
									"     var jsonData = pm.response.json();\r",
									"\r",
									"     pm.expect(jsonData.datasource.filter).is.eql(false);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/67da86c99909eb093566004f?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67da86c99909eb093566004f"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the updated list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id of the list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).is.eql('67da86c99909eb093566004f')\r",
									"   \r",
									"\r",
									"});\r",
									"\r",
									"pm.test('display the updated list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    console.log(jsonData)\r",
									"\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('check the datatypes ', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    pm.expect(jsonData.closed).to.be.a('boolean');\r",
									"\r",
									"});\r",
									"pm.test('check the datatypes ', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    pm.expect(jsonData.name).to.be.a('string');\r",
									"\r",
									"\r",
									"});\r",
									"pm.test('check the datatypes ', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    pm.expect(jsonData.color).to.be.a('string');\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the pos value ',function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.pos).is.eql(1536)\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ram\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/lists/67da86c99909eb093566004f?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67da86c99909eb093566004f"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test('check the new list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the new list', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"\r",
									"});\r",
									"\r",
									"let name = pm.environment.get(\"name\")\r",
									"//console.log(name)\r",
									"\r",
									"pm.test(`check the name of the list : ${name}`, function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).is.eql(name)\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the data source ', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    pm.expect(jsonData.datasource.filter).is.eql(false)\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{name}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/lists?name=tommorrow&idBoard=67da70da7765598055d7523b&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "tommorrow"
								},
								{
									"key": "idBoard",
									"value": "67da70da7765598055d7523b"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive all cards in list",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/67dcf9106495d6197f8334e0/archiveAllCards?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67dcf9106495d6197f8334e0",
								"archiveAllCards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive or unarchive a list",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/lists/67dcf9106495d6197f8334e0/closed?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67dcf9106495d6197f8334e0",
								"closed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Move List to Board",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"To do\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/lists/67da70da7765598055d752d7/idBoard?value=5abbe4b7ddc1b351ef961414&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67da70da7765598055d752d7",
								"idBoard"
							],
							"query": [
								{
									"key": "value",
									"value": "5abbe4b7ddc1b351ef961414"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Actions for a List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/67dcf9106495d6197f8334e0/actions?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67dcf9106495d6197f8334e0",
								"actions"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards in a List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test('check headers', function(){\r",
									"    pm.response.to.have.header('Content-Type')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the id of the all avaliable list', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"        jsonData.forEach(items => {\r",
									"            console.log(items.id[0]);\r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('get the badges of the list', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"        jsonData.forEach(items => {\r",
									"            console.log(items.badges);\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the badges of the single list', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"        jsonData.forEach(items => {\r",
									"            console.log(items.badges);\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/lists/67dcf9106495d6197f8334e0/cards?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"67dcf9106495d6197f8334e0",
								"cards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Boards",
			"item": [
				{
					"name": "Add a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http status', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the all details of the board', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData);\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the id of the board', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the name of the baord', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).is.exist\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the desc', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData.desc);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the descDate', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('descData');\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the descDate', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.desc).to.exist\r",
									"});\r",
									"\r",
									"pm.test('get the idOrganization', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    \r",
									"    pm.expect(jsonData).to.have.property('idOrganization')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the idOrganization', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('idOrganization');\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test('get the url', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('url')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the shorturl', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('shortUrl')\r",
									"});\r",
									"\r",
									"pm.test('get the keys of the prefs', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.prefs).to.exist\r",
									"});\r",
									"\r",
									"pm.test('get the lablesNames', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.have.property('labelNames')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the prefs', function() {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.prefs.permissionLevel).is.eql('private')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the switcherviews', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.prefs.switcherViews[0].enabled).is.equal(true)\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test('check the switcherviews', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.prefs.switcherViews[1].viewType).is.equal('Table')\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/?name=Demo board 2&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Demo board 2"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test('check the http status', function(){\r",
									"    pm.response.to.have.status(404)\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/67dba58281f719d5b79c394f?key=4f2aa048a5914e85398cc1eee212361b&token=ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67dba58281f719d5b79c394f"
							],
							"query": [
								{
									"key": "key",
									"value": "4f2aa048a5914e85398cc1eee212361b"
								},
								{
									"key": "token",
									"value": "ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrive a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the http status code', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"check the id of the boards\", function (){\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"        jsonData.forEach(items => {\r",
									"\r",
									"            pm.expect(items.id).is.eql('67da88a53f5126f489fa8d23')\r",
									"    \r",
									"            \r",
									"        });\r",
									"   \r",
									"});\r",
									"\r",
									"pm.test(\"check the id of the boards\", function (){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    \r",
									"    \r",
									"        jsonData.forEach(items => {\r",
									"            pm.expect(items).to.have.property('id');  \r",
									"            \r",
									"        });\r",
									"  \r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"check the idmember of the boards\", function (){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    \r",
									"    \r",
									"        jsonData.forEach(items => {\r",
									"            pm.expect(items).to.have.property('idMember');  \r",
									"            \r",
									"        });\r",
									"});\r",
									"\r",
									"pm.test(\"check the membertype\", function (){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    \r",
									"    \r",
									"        jsonData.forEach(items => {\r",
									"            pm.expect(items.memberType).is.eql('normal') \r",
									"            \r",
									"        });\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/67da70da7765598055d7523b/memberships?key=4f2aa048a5914e85398cc1eee212361b&token=ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF&Pattern=",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67da70da7765598055d7523b",
								"memberships"
							],
							"query": [
								{
									"key": "key",
									"value": "4f2aa048a5914e85398cc1eee212361b"
								},
								{
									"key": "token",
									"value": "ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF"
								},
								{
									"key": "Pattern",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test('check the status of the http', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test('check the updated name ', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData.name);\r",
									"});\r",
									"\r",
									"pm.test('check the name of the board', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).is.eql('demo 1 board')\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test('check the name of the board', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).is.eql('demo 1 board')\r",
									"\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test('extract the idOrganization of the board ', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.idOrganization).to.be.a('string')\r",
									"    console.log(jsonData.idOrganization)\r",
									"});\r",
									"\r",
									"pm.test('get the label names', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"            pm.expect(jsonData).to.have.property('labelNames');  \r",
									"            \r",
									"            \r",
									"});\r",
									"\r",
									"pm.test('get the label names', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"            pm.expect(jsonData).to.have.property('labelNames');  \r",
									"            console.log(jsonData.labelNames);\r",
									"            \r",
									"});\r",
									"\r",
									"pm.test('check the url', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"            pm.expect(jsonData).to.have.property('url');  \r",
									"            \r",
									"            \r",
									"});\r",
									"\r",
									"pm.test('check the header', function(){\r",
									"    pm.response.to.have.header('Content-Type',\"application/json; charset=utf-8\")\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"demo 1 board\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/boards/67da70da7765598055d7523b?key=4f2aa048a5914e85398cc1eee212361b&token=ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67da70da7765598055d7523b"
							],
							"query": [
								{
									"key": "key",
									"value": "4f2aa048a5914e85398cc1eee212361b"
								},
								{
									"key": "token",
									"value": "ATTA7edb9ef414d4b2b54bb41540926ecf5740377f0a11a9d0c295ebb83237ba37f3AD4699EF"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get a field on the board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of the http', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('check the name of the board', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData._value).is.eql('demo 1 board')\r",
									"    console.log(jsonData._value);\r",
									"});\r",
									"\r",
									"pm.test('get the name of the board', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData._value).to.be.a('string')\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/67da70da7765598055d7523b/name?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67da70da7765598055d7523b",
								"name"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get actions of a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test('check the status of http', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('extract the id', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property('id');\r",
									"        \r",
									"        \r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test('check the badges', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items.badges.attachements).is.eql('0')\r",
									"        \r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url }}/{{board_id}}/cards?key={{api_key}}&token={{api_token}}",
							"host": [
								"{{url }}"
							],
							"path": [
								"{{board_id}}",
								"cards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get boardstars on a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the id of idBoard', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items.idBoard).is.eql(\"67da70da7765598055d7523b\")\r",
									"\r",
									"    });\r",
									"   \r",
									"});\r",
									"\r",
									"pm.test('check the pos', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items.pos).is.eql(16384)\r",
									"\r",
									"    });\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test('check the third key elements', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"\r",
									"    jsonData.forEach(items => {\r",
									"    \r",
									"        pm.expect(items._id).is.eql(\"67da8128427c0e89379247af\")\r",
									"    });\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/boards/67da70da7765598055d7523b/boardStars?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67da70da7765598055d7523b",
								"boardStars"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get checklists on the board",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/checklists?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"checklists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get cards on the board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the header', function (){\r",
									"\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the status of http', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"check the id of all board\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property(\"id\");\r",
									"        console.log(items.id);\r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"check the id of all idboard\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property(\"idBoard\");\r",
									"        console.log(items.idBoard);\r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"check the url of all board\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property(\"url\");\r",
									"        console.log(items.url);\r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/cards?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"cards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get filtered cards on a board",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/cards/visible?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"cards",
								"visible"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get customs fields for a board",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/customFields?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"customFields"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "gets labels on the board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('get all the labels', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    jsonData.forEach(items => {\r",
									"        \r",
									"        console.log(items);\r",
									"\r",
									"    });\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"pm.test('extract all the labels', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    jsonData.forEach(items => {\r",
									"        \r",
									"        console.log(items.idBoard);\r",
									"\r",
									"    });\r",
									"    \r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"extract the id of all labels\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property(\"id\");\r",
									"        console.log(items.id);\r",
									"\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test('extract the name of all labels', function() {\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.forEach(items => {\r",
									"        pm.expect(items).to.have.property(\"name\");\r",
									"        console.log(items.name);\r",
									"\r",
									"    });\r",
									"\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/labels?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"labels"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a label on the board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test('check the updated name', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"name\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the color', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"color\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the idboard', function(){\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"idBoard\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the label ids', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData.id);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the label id board', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData.idBoard);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('get the label name', function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log(jsonData.name);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"noko\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/labels?name=satish&color=null&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"labels"
							],
							"query": [
								{
									"key": "name",
									"value": "satish"
								},
								{
									"key": "color",
									"value": "null"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get lists on the board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test('check the status of http', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('check the content-type', function(){\r",
									"    pm.response.to.have.header('application/json charset=utf-8')\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/lists?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"lists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a list on a board",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/lists?name=Things to sell today&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "Things to sell today"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "invite member to board via email",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/members?email=nokobrazil@gmail.com&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"members"
							],
							"query": [
								{
									"key": "email",
									"value": "nokobrazil@gmail.com"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add a member to a board",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/members/67da6cce9fdfcf4607ce0bf4?type=normal&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"members",
								"67da6cce9fdfcf4607ce0bf4"
							],
							"query": [
								{
									"key": "type",
									"value": "normal"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "remove a member from the board",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/members/67da6cce9fdfcf4607ce0bf4?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"members",
								"67da6cce9fdfcf4607ce0bf4"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Membership of Member on a Board",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/{{board_id}}/memberships/67da6cce9fdfcf4607ce0bf4?type=normal&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"{{board_id}}",
								"memberships",
								"67da6cce9fdfcf4607ce0bf4"
							],
							"query": [
								{
									"key": "type",
									"value": "normal"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a board",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/?name=noko&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "noko"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a  emailkey for a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('get the id of a board',function(){\r",
									"    var jsonData = pm.response.json()\r",
									"    console.log('jsonData.id')\r",
									"});\r",
									"\r",
									"pm.test(\"check the status of http\", function(){\r",
									"    pm.response.to.have.status('200')\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/67da6cfa9c37eeee78d009af/emailKey/generate?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67da6cfa9c37eeee78d009af",
								"emailKey",
								"generate"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Tag for a Board",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/67dba9f5aea21697c915306c/?value=5abbe4b7ddc1b351ef961414&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								"67dba9f5aea21697c915306c",
								""
							],
							"query": [
								{
									"key": "value",
									"value": "5abbe4b7ddc1b351ef961414"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "create a new card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http status', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the cards is present or not', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id name', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id name', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).is.eql('67e0f4e88323cc82a5364ecb')\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the headers', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.Content-Type).is.eql('application/json;charset=utf-8')\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"let name = pm.environment.get(\"name\")\r",
									"\r",
									"\r",
									"pm.test(`check the name of the list : ${name}`, function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.name).is.eql(name)\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/cards?idList=67da86c99909eb093566004f&key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards"
							],
							"query": [
								{
									"key": "idList",
									"value": "67da86c99909eb093566004f"
								},
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get a card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test('Check response data', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the id of the lists', function () {\r",
									"    const jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.id).is.eql('67da86c99909eb093566004f')\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/67dbdcdad48029c23632e067?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67dbdcdad48029c23632e067"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update a card",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"noko\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/cards/67dbdcdad48029c23632e067?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67dbdcdad48029c23632e067"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete a card",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/67dbdcdad48029c23632e067?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67dbdcdad48029c23632e067"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get a field on a card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check the status of http', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test('Check response data', function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('check the value of the card', function () {\r",
									"    const jsonData = pm.response.json()\r",
									"    pm.expect(jsonData._value).is.eql(21)\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/67dbd8572bcb56d58be37563/idshort?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67dbd8572bcb56d58be37563",
								"idshort"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get attachments on a card",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/67da89d9ed43d610c9390b81/attachments?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67da89d9ed43d610c9390b81",
								"attachments"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a attachment on card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"url\" :\"https://www.google.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.trello.com/1/cards/67da89d9ed43d610c9390b81/attachments?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67da89d9ed43d610c9390b81",
								"attachments"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Attachment on a Card",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/{id}/attachments/{idAttachment}?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"{id}",
								"attachments",
								"{idAttachment}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Attachment on a Card",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/67dbf3151f60c9eefb8fedb6/attachments/67dbf3151f60c9eefb8fed9a?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"67dbf3151f60c9eefb8fedb6",
								"attachments",
								"67dbf3151f60c9eefb8fed9a"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get checkItems on a Card",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/{id}/checkItemStates?key={{api_key}}&token={{api_token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								"{id}",
								"checkItemStates"
							],
							"query": [
								{
									"key": "key",
									"value": "{{api_key}}"
								},
								{
									"key": "token",
									"value": "{{api_token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}